"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/web.dom-collections.iterator");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _keys = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/keys"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _findIndex = _interopRequireDefault(require("./findIndex"));

var _BaseMetricsAsyncCache = _interopRequireDefault(require("../BaseMetricsAsyncCache"));

/**
Copyright 2016 Split Software

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
**/
var LatencyCacheInRedis = /*#__PURE__*/function (_BaseMetricsAsyncCach) {
  (0, _inherits2.default)(LatencyCacheInRedis, _BaseMetricsAsyncCach);

  function LatencyCacheInRedis(keys, redis) {
    var _this;

    (0, _classCallCheck2.default)(this, LatencyCacheInRedis);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LatencyCacheInRedis).call(this));
    _this.keys = keys;
    _this.redis = redis;
    return _this;
  }

  (0, _createClass2.default)(LatencyCacheInRedis, [{
    key: "track",
    value: function track(metricName, latency) {
      var bucketNumber = (0, _findIndex.default)(latency);
      return this.redis.incr((0, _keys.default)(this).buildLatencyKey(metricName, bucketNumber)).catch(function () {// noop, for telemetry metrics there's no need to throw.
      });
    }
  }]);
  return LatencyCacheInRedis;
}(_BaseMetricsAsyncCache.default);

var _default = LatencyCacheInRedis;
exports.default = _default;