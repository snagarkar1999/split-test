"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/json/stringify"));

var _reduce = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/reduce"));

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _InMemory = _interopRequireDefault(require("../../ImpressionsCache/InMemory"));

/**
Copyright 2016 Split Software

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
**/
(0, _tapeCatch.default)('IMPRESSIONS CACHE IN MEMORY / should incrementally store values', function (assert) {
  var _context;

  var c = new _InMemory.default();
  c.track([0]).track([1, 2]).track([3]);
  assert.true((0, _reduce.default)(_context = c.state()).call(_context, function (accum, e, k) {
    return accum += e - k;
  }, 0) === 0, 'all the items should be stored in sequential order');
  assert.end();
});
(0, _tapeCatch.default)('IMPRESSIONS CACHE IN MEMORY / should support custom toJSON method', function (assert) {
  var c = new _InMemory.default();
  var hooked = (0, _stringify.default)(c);
  var manual = (0, _stringify.default)(c.state());
  assert.true(hooked === manual, 'toJSON should expose the counters as an array of numbers');
  assert.end();
});