"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _indexOf = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/index-of"));

var _constants = require("../constants");

function mode(key, mode) {
  var _context;

  // Leaving the comparison as is, in case we change the mode name but not the setting.
  if (key === 'localhost') return _constants.LOCALHOST_MODE;
  if ((0, _indexOf.default)(_context = [_constants.STANDALONE_MODE, _constants.PRODUCER_MODE, _constants.CONSUMER_MODE]).call(_context, mode) === -1) throw Error('Invalid mode provided');
  return mode;
}

var _default = mode;
exports.default = _default;