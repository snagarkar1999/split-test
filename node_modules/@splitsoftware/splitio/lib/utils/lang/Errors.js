"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.SplitNetworkError = exports.SplitTimeoutError = exports.SplitError = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/wrapNativeSuper"));

var SplitError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(SplitError, _Error);

  function SplitError() {
    var _this;

    var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Split Error';
    (0, _classCallCheck2.default)(this, SplitError);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SplitError).call(this, msg));
    _this.message = msg;
    return _this;
  }

  return SplitError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.SplitError = SplitError;

var SplitTimeoutError = /*#__PURE__*/function (_SplitError) {
  (0, _inherits2.default)(SplitTimeoutError, _SplitError);

  function SplitTimeoutError(msg) {
    (0, _classCallCheck2.default)(this, SplitTimeoutError);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SplitTimeoutError).call(this, msg || 'Split Timeout Error'));
  }

  return SplitTimeoutError;
}(SplitError);

exports.SplitTimeoutError = SplitTimeoutError;

var SplitNetworkError = /*#__PURE__*/function (_SplitError2) {
  (0, _inherits2.default)(SplitNetworkError, _SplitError2);

  function SplitNetworkError(msg, code) {
    var _this2;

    (0, _classCallCheck2.default)(this, SplitNetworkError);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SplitNetworkError).call(this, msg || 'Split Network Error'));
    _this2.statusCode = code;
    return _this2;
  }

  return SplitNetworkError;
}(SplitError);

exports.SplitNetworkError = SplitNetworkError;