"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

require("core-js/modules/es.object.to-string");

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _thenable = _interopRequireDefault(require("../../promise/thenable"));

(0, _tapeCatch.default)('Promise utils / thenable', function (assert) {
  var prom = new _promise.default(function () {});

  var promResolved = _promise.default.resolve();

  var promRejected = _promise.default.reject();

  var thenableThing = {
    then: function then() {}
  };
  var nonThenableThing = {
    then: 'not a function'
  };
  assert.true((0, _thenable.default)(prom), 'Promises and thenable-like objects should pass the test.');
  assert.true((0, _thenable.default)(promResolved), 'Promises and thenable-like objects should pass the test.');
  assert.true((0, _thenable.default)(promRejected), 'Promises and thenable-like objects should pass the test.');
  assert.true((0, _thenable.default)(thenableThing), 'Promises and thenable-like objects should pass the test.');
  assert.false((0, _thenable.default)(nonThenableThing), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)('string'), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)(123), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)({}), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)({
    catch: function _catch() {}
  }), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)([prom, promResolved]), 'Non thenable objects should fail the test.');
  assert.false((0, _thenable.default)(function () {}), 'Non thenable objects should fail the test.');
  assert.end();
});