"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.validateSplits = validateSplits;

var _forEach = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/for-each"));

var _isArray = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/array/is-array"));

var _lang = require("../lang");

var _logger = _interopRequireDefault(require("../logger"));

var _split = require("./split");

var log = (0, _logger.default)('');

function validateSplits(maybeSplits, method) {
  if ((0, _isArray.default)(maybeSplits) && maybeSplits.length > 0) {
    var validatedArray = []; // Remove invalid values

    (0, _forEach.default)(maybeSplits).call(maybeSplits, function (maybeSplit) {
      var splitName = (0, _split.validateSplit)(maybeSplit);
      if (splitName) validatedArray.push(splitName);
    }); // Strip off duplicated values if we have valid split names then return

    if (validatedArray.length) return (0, _lang.uniq)(validatedArray);
  }

  log.error("".concat(method, ": split_names must be a non-empty array."));
  return false;
}