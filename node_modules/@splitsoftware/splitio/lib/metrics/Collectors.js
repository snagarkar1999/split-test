"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.ClientCollector = exports.MySegmentsCollector = exports.SplitChangesCollector = exports.SegmentChangesCollector = void 0;

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/inherits"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _bind = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/bind"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createClass"));

var ProducerMetricsCollector = /*#__PURE__*/function () {
  function ProducerMetricsCollector(storage) {
    var _context, _context2, _context3;

    (0, _classCallCheck2.default)(this, ProducerMetricsCollector);
    this.storage = storage;
    this.latency = (0, _bind.default)(_context = this.latency).call(_context, this);
    this.count = (0, _bind.default)(_context2 = this.count).call(_context2, this);
    this.countException = (0, _bind.default)(_context3 = this.countException).call(_context3, this);
  }

  (0, _createClass2.default)(ProducerMetricsCollector, [{
    key: "latency",
    value: function latency(ms) {
      this.storage.metrics.track("".concat(this.metricType, ".time"), ms);
    }
  }, {
    key: "count",
    value: function count(status) {
      var _context4;

      this.storage.count.track((0, _concat.default)(_context4 = "".concat(this.metricType, ".status.")).call(_context4, status));
    }
  }, {
    key: "countException",
    value: function countException() {
      this.storage.count.track("".concat(this.metricType, ".exception"));
    }
  }]);
  return ProducerMetricsCollector;
}();

var SegmentChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle) {
  (0, _inherits2.default)(SegmentChangesCollector, _ProducerMetricsColle);

  function SegmentChangesCollector(storage) {
    var _this;

    (0, _classCallCheck2.default)(this, SegmentChangesCollector);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SegmentChangesCollector).call(this, storage));
    _this.metricType = 'segmentChangeFetcher';
    return _this;
  }

  return SegmentChangesCollector;
}(ProducerMetricsCollector);

exports.SegmentChangesCollector = SegmentChangesCollector;

var SplitChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle2) {
  (0, _inherits2.default)(SplitChangesCollector, _ProducerMetricsColle2);

  function SplitChangesCollector(storage) {
    var _this2;

    (0, _classCallCheck2.default)(this, SplitChangesCollector);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SplitChangesCollector).call(this, storage));
    _this2.metricType = 'splitChangeFetcher';
    return _this2;
  }

  return SplitChangesCollector;
}(ProducerMetricsCollector);

exports.SplitChangesCollector = SplitChangesCollector;

var MySegmentsCollector = /*#__PURE__*/function (_ProducerMetricsColle3) {
  (0, _inherits2.default)(MySegmentsCollector, _ProducerMetricsColle3);

  function MySegmentsCollector(storage) {
    var _this3;

    (0, _classCallCheck2.default)(this, MySegmentsCollector);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MySegmentsCollector).call(this, storage));
    _this3.metricType = 'mySegmentsFetcher';
    return _this3;
  }

  return MySegmentsCollector;
}(ProducerMetricsCollector);

exports.MySegmentsCollector = MySegmentsCollector;

var ClientCollector = /*#__PURE__*/function () {
  function ClientCollector(storage) {
    var _context5, _context6, _context7, _context8, _context9;

    (0, _classCallCheck2.default)(this, ClientCollector);
    this.storage = storage;
    this.ready = (0, _bind.default)(_context5 = this.ready).call(_context5, this);
    this.getTreatment = (0, _bind.default)(_context6 = this.getTreatment).call(_context6, this);
    this.getTreatments = (0, _bind.default)(_context7 = this.getTreatments).call(_context7, this);
    this.getTreatmentWithConfig = (0, _bind.default)(_context8 = this.getTreatmentWithConfig).call(_context8, this);
    this.getTreatmentsWithConfig = (0, _bind.default)(_context9 = this.getTreatmentsWithConfig).call(_context9, this);
  }

  (0, _createClass2.default)(ClientCollector, [{
    key: "ready",
    value: function ready(ms) {
      this.storage.metrics.track('sdk.ready', ms);
    }
  }, {
    key: "getTreatment",
    value: function getTreatment(ms) {
      this.storage.metrics.track('sdk.getTreatment', ms);
    }
  }, {
    key: "getTreatments",
    value: function getTreatments(ms) {
      this.storage.metrics.track('sdk.getTreatments', ms);
    }
  }, {
    key: "getTreatmentWithConfig",
    value: function getTreatmentWithConfig(ms) {
      this.storage.metrics.track('sdk.getTreatmentWithConfig', ms);
    }
  }, {
    key: "getTreatmentsWithConfig",
    value: function getTreatmentsWithConfig(ms) {
      this.storage.metrics.track('sdk.getTreatmentsWithConfig', ms);
    }
  }]);
  return ClientCollector;
}();

exports.ClientCollector = ClientCollector;