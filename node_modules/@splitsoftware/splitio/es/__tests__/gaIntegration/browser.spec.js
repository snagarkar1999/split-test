import _bindInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/bind";
import tape from 'tape-catch';
import fetchMock from '../utils/fetchMock';
import gaToSplitSuite from './ga-to-split.spec';
import splitToGaSuite from './split-to-ga.spec';
import bothIntegrationsSuite from './both-integrations.spec';
import SettingsFactory from '../../utils/settings';
import splitChangesMock1 from '../mocks/splitchanges.since.-1.json';
import mySegmentsFacundo from '../mocks/mysegments.facundo@split.io.json';
var settings = SettingsFactory({
  core: {
    key: 'facundo@split.io'
  }
});
tape('## E2E CI Tests ##', function (assert) {
  fetchMock.get(settings.url('/splitChanges?since=-1'), {
    status: 200,
    body: splitChangesMock1
  });
  fetchMock.get(settings.url('/mySegments/facundo@split.io'), {
    status: 200,
    body: mySegmentsFacundo
  });
  /* Validate GA integration */

  assert.test('E2E / GA-to-Split', _bindInstanceProperty(gaToSplitSuite).call(gaToSplitSuite, null, fetchMock));
  assert.test('E2E / Split-to-GA', _bindInstanceProperty(splitToGaSuite).call(splitToGaSuite, null, fetchMock));
  assert.test('E2E / Both GA integrations', _bindInstanceProperty(bothIntegrationsSuite).call(bothIntegrationsSuite, null, fetchMock));
  assert.end();
});