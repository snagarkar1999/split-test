import _classCallCheck from "@babel/runtime-corejs3/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime-corejs3/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime-corejs3/helpers/esm/inherits";
import _wrapNativeSuper from "@babel/runtime-corejs3/helpers/esm/wrapNativeSuper";
export var SplitError = /*#__PURE__*/function (_Error) {
  _inherits(SplitError, _Error);

  function SplitError() {
    var _this;

    var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Split Error';

    _classCallCheck(this, SplitError);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitError).call(this, msg));
    _this.message = msg;
    return _this;
  }

  return SplitError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
export var SplitTimeoutError = /*#__PURE__*/function (_SplitError) {
  _inherits(SplitTimeoutError, _SplitError);

  function SplitTimeoutError(msg) {
    _classCallCheck(this, SplitTimeoutError);

    return _possibleConstructorReturn(this, _getPrototypeOf(SplitTimeoutError).call(this, msg || 'Split Timeout Error'));
  }

  return SplitTimeoutError;
}(SplitError);
export var SplitNetworkError = /*#__PURE__*/function (_SplitError2) {
  _inherits(SplitNetworkError, _SplitError2);

  function SplitNetworkError(msg, code) {
    var _this2;

    _classCallCheck(this, SplitNetworkError);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SplitNetworkError).call(this, msg || 'Split Network Error'));
    _this2.statusCode = code;
    return _this2;
  }

  return SplitNetworkError;
}(SplitError);