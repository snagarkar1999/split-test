import _keysInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/keys";
import { isString } from '../../../utils/lang';
export default function parseCondition(data) {
  var treatment = data.treatment;

  if (_keysInstanceProperty(data)) {
    return {
      conditionType: 'WHITELIST',
      matcherGroup: {
        combiner: 'AND',
        matchers: [{
          keySelector: null,
          matcherType: 'WHITELIST',
          negate: false,
          whitelistMatcherData: {
            whitelist: isString(_keysInstanceProperty(data)) ? [_keysInstanceProperty(data)] : _keysInstanceProperty(data)
          }
        }]
      },
      partitions: [{
        treatment: treatment,
        size: 100
      }],
      label: "whitelisted ".concat(treatment)
    };
  } else {
    return {
      conditionType: 'ROLLOUT',
      matcherGroup: {
        combiner: 'AND',
        matchers: [{
          keySelector: null,
          matcherType: 'ALL_KEYS',
          negate: false
        }]
      },
      partitions: [{
        treatment: treatment,
        size: 100
      }],
      label: 'default rule'
    };
  }
}